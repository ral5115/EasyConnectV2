using EasyTools.Framework.Data;
using System;
using System.Runtime.Serialization;

namespace EasyTools.Infrastructure.Entities.Base
{
    /// <summary>
    /// CONIntegratorConfiguration object for mapped table CONIntegratorConfigurations.
    /// </summary>
    [DataContract(IsReference = true)]
    public class BaseCONIntegratorConfiguration : BaseEntity
    {

        public BaseCONIntegratorConfiguration()
        {
        }

        public BaseCONIntegratorConfiguration(BaseCONIntegratorConfiguration data, Options option)
        {

            if (option == Options.Light || option == Options.Me || option == Options.All)
            {
                //OptionName.Light
                this.Id = data.Id;
                //this.InternalConnectionName = data.InternalConnectionName;
                this.Active = data.Active;

                if (option == Options.Me || option == Options.All)
                {

                    //this.WebServiceUrl = data.WebServiceUrl;
                    this.InternalUser = data.InternalUser;
                    this.InternalPassword = data.InternalPassword;
                    //this.InternalConnectionName = data.InternalConnectionName;
                    this.Active = data.Active;
                    this.UpdatedBy = data.UpdatedBy;
                    this.LastUpdate = data.LastUpdate;
                    this.ConnectionNumber = data.ConnectionNumber;
                    this.ProgramPath = data.ProgramPath;
                    //this.DirectImport = data.DirectImport;
                    this.IntegratorId = data.IntegratorId;
                    this.ConnectionId = data.ConnectionId;
                    this.CompanyId = data.CompanyId;
                }
            }
        }

        //[DataMember]
        //public virtual String WebServiceUrl { get; set; }

        [DataMember]
        public virtual String InternalUser { get; set; }

        [DataMember]
        public virtual String InternalPassword { get; set; }

        //[DataMember]
        //public virtual String InternalConnectionName { get; set; }

        [DataMember]
        public virtual Boolean Active { get; set; }

        [DataMember]
        public virtual Int32? ConnectionNumber { get; set; }

        [DataMember]
        public virtual String ProgramPath { get; set; }

        //[DataMember]
        //public virtual Boolean DirectImport { get; set; }

        [DataMember]
        public virtual Int32 IntegratorId { get; set; }

        [DataMember]
        public virtual Int32? ConnectionId { get; set; }

        [DataMember]
        public virtual Int32 CompanyId { get; set; }


    }
}
